#! /usr/bin/env ruby

class String
  def is_number?
    true if Float(self) rescue false
  end
end

def String.random_alphanumeric(size=16)
  chars = ('a'..'z').to_a + ('A'..'Z').to_a + ('0'..'9').to_a

  chars.delete('i')
  chars.delete('I')
  chars.delete('o')
  chars.delete('O')
  chars.delete('l')
  chars.delete('1')
  chars.delete('0')

  (0...size).collect { chars[Kernel.rand(chars.length)] }.join
end

all = []

# HOW MUCH
howmuch = Integer(ARGV[0]) || 10000

# PATH
path = ARGV[1] || 'foo'
path = './' + path

#####################################

puts "Generating #{howmuch} codes."

howmuch.times { |i| all << String.random_alphanumeric(10) }

#####################################

puts "Looking for duplicates."

dups = all.select { |e| all.count(e) > 1 }.uniq
dups.each { |dup| all.delete(dup) }

puts "Duplicates:"
p dups

#####################################

puts "Generating file #{path}."

File.open(path, 'w+') do |file|
  all.each do |item|
    file.puts item
  end
end

