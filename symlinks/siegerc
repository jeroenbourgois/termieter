# Signify verbose mode, true turns on verbose output
# ex: verbose = true|false
#
verbose = false

# Show logfile location.  By default, siege displays the
# logfile location at the end of every run when logging
# You can turn this message off with this directive.
# ex: show-logfile = false
#
show-logfile = false

# Default logging status, true turns logging on.
# ex: logging = true|false
#
logging = true

# Logfile, the default siege logfile is $PREFIX/var/siege.log
# This directive allows you to choose an alternative log file.
# Environment variables may be used as shown in the examples:
# ex: logfile = /home/jeff/var/log/siege.log
#     logfile = ${HOME}/var/log/siege.log
#     logfile = ${LOGFILE}
#

# HTTP protocol.  Options HTTP/1.1 and HTTP/1.0.
# Some webservers have broken implementation of the
# 1.1 protocol which skews throughput evaluations.
# If you notice some siege clients hanging for
# extended periods of time, change this to HTTP/1.0
# ex: protocol = HTTP/1.1
#     protocol = HTTP/1.0
#
protocol = HTTP/1.1

# Chunked encoding is required by HTTP/1.1 protocol
# but siege allows you to turn it off as desired.
# 
# ex: chunked = true 
# 
chunked = true

# Cache revalidation.
# Siege supports cache revalidation for both ETag and 
# Last-modified headers. If a copy is still fresh, the 
# server responds with 304. 
# HTTP/1.1 200   0.00 secs:    2326 bytes ==> /apache_pb.gif
# HTTP/1.1 304   0.00 secs:       0 bytes ==> /apache_pb.gif
# HTTP/1.1 304   0.00 secs:       0 bytes ==> /apache_pb.gif
# 
# ex: cache = true
#
cache = false

# Connection directive. Options "close" and "keep-alive"
# Starting with release 2.57b3, siege implements persistent 
# connections in accordance to RFC 2068 using both chunked
# encoding and content-length directives to determine the 
# page size. To run siege with persistent connections set
# the connection directive to keep-alive. (Default close)
# CAUTION: use the keep-alive directive with care.
# DOUBLE CAUTION: this directive does not work well on HPUX
# TRIPLE CAUTION: don't use keep-alives until further notice
# ex: connection = close
#     connection = keep-alive
#
connection = keep-alive

# Default number of simulated  concurrent users
# ex: concurrent = 25
#
concurrent = 250

# Default duration of the siege.  The right hand argument has
# a modifier which specifies the time units, H=hours, M=minutes,
# and S=seconds. If a modifier is not specified, then minutes 
# are assumed.
# ex: time = 50M
#
time = 30S

# Repetitions.  The length of siege may be specified in client
# reps rather then a time duration.  Instead of specifying a time
# span, you can tell each siege instance to hit the server X number
# of times.  So if you chose 'reps = 20' and you've selected 10 
# concurrent users, then siege will hit the server 200 times.
# ex: reps = 20
#
# reps = 1000

# Default delay value, see the siege(1) man page.  
# This value is used for load testing, it is not used 
# for benchmarking.
# ex: delay = 3
#
# delay = 1

# Connection timeout value. Set the value in seconds for 
# socket connection timeouts. The default value is 30 seconds.
# ex: timeout = 30
#
timeout = 3

# Session expiration: This directive allows you to delete all
# cookies after you pass through the URLs. This means siege will
# grab a new session with each run through its URLs. The default
# value is false.
# ex: expire-session = true
#
# expire-session = 

# Failures: This is the number of total connection failures allowed
# before siege aborts. Connection failures (timeouts, socket failures, 
# etc.) are combined with 400 and 500 level errors in the final stats, 
# but those errors do not count against the abort total.  If you set 
# this total to 10, then siege will abort after ten socket timeouts, 
# but it will NOT abort after ten 404s. This is designed to prevent 
# a run-away mess on an unattended siege. The default value is 1024
# ex: failures = 50
#
# failures =

# Internet simulation. If true, siege clients will hit
# the URLs in the urls.txt file randomly, thereby simulating
# internet usage.  If false, siege will run through the 
# urls.txt file in order from first to last and back again.
# ex: internet = true
#
internet = false

# Default benchmarking value, If true, there is NO delay
# between server requests, siege runs as fast as the web
# server and the network will let it.  Set this to false 
# for load testing.
# ex: benchmark = true
# 
benchmark = true

# Accept-encoding. This option allows you to specify 
# acceptable encodings returned by the server. Use this
# directive to turn on compression. By default we accept
# gzip compression.
#
# ex: accept-encoding = *
#     accept-encoding = gzip
#     accept-encoding = compress;q=0.5;gzip;q=1
accept-encoding = gzip

# TURN OFF THAT ANNOYING SPINNER!
# Siege spawns a thread and runs a spinner to entertain you
# as it collects and computes its stats. If you don't like 
# this feature, you may turn it off here.
# ex: spinner = false 
#
spinner = true

# Redirection support.  This option allows to to control
# whether a Location: hint will be followed.  Most users
# will want to follow redirection information, but sometimes
# it's desired to just get the Location information.
#
# ex: follow-location = false
#
follow-location = true

# Zero-length data.  siege can be configured to disregard
# results in which zero bytes are read after the headers.
# Alternatively, such results can be counted in the final
# tally of outcomes.
#
# ex: zero-data-ok = false 
#
# zero-data-ok =
